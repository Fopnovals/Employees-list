{"version":3,"sources":["scripts/app.js"],"names":["angular","module","component","templateUrl","bindings","controller","mainService","_this","this","employees","editPerson","employee","id","removePerson","$timeout","onFocus","dataForm","focusEffect","$event","setFocus","target","name","blurEffect","clearFocus","addEmployee","employeeName","date","position","phone","email","$invalid","validStatus","addPerson","clearDataForm","colors","getColors","lengthColors","length","allColors","map","col","push","fromJson","localStorage","getItem","data","el","ind","Date","getTime","unshift","setStorage","index","splice","employeesList","toJson","setItem","$inject","service","runBlock","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-3e7e722bae.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('Test', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .component('employeesComponent', {\n      templateUrl: 'app/components/employees/employees.template.html',\n      bindings: {\n\n      },\n      controller: function(mainService) {\n        var _this = this;\n\n        _this.employees = mainService.employees;\n        _this.mainService = mainService;\n\n        _this.editPerson = function(employee) {\n          mainService.editPerson(employee.id);\n\n        };\n\n        _this.removePerson = function(employee) {\n          mainService.removePerson(employee.id);\n        };\n\n      }\n    });\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .component('addComponent', {\n      templateUrl: 'app/components/add/add.template.html',\n      bindings: {\n\n      },\n      controller: function(mainService, $timeout) {\n        var _this = this;\n\n        _this.mainService = mainService;\n\n        _this.onFocus = mainService.onFocus;\n        _this.dataForm = mainService.dataForm;\n\n        _this.focusEffect = function($event) {\n          _this.onFocus = mainService.setFocus($event.target.name);\n        };\n        _this.blurEffect = function($event) {\n          _this.onFocus = mainService.clearFocus($event.target.name);\n        };\n\n        _this.addEmployee = function (employee) {\n          var dataForm = {\n            employeeName: _this.dataForm.employeeName,\n            date: _this.dataForm.date,\n            position: _this.dataForm.position,\n            phone: _this.dataForm.phone,\n            email: _this.dataForm.email,\n            id: _this.dataForm.id\n          };\n          if(employee.$invalid) {\n            _this.validStatus = 'invalid';\n            $timeout(function() {\n              _this.validStatus = '';\n            },2000);\n          } else {\n            mainService.addPerson(dataForm);\n            _this.dataForm = mainService.clearDataForm();\n          }\n        };\n\n      }\n    });\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .service('mainService', mainService);\n\n  /** @ngInject */\n  function mainService($timeout, colors) {\n    var _this = this;\n\n    _this.getColors = function() {\n      var lengthColors = _this.employees.length;\n      var allColors = [];\n      do{\n        colors.map(function(col) {\n          allColors.push(col);\n        });\n      }while(allColors.length <= lengthColors);\n\n      return allColors;\n    };\n\n    _this.onFocus = {\n      employeeName: '',\n      position: '',\n      phone: '',\n      date: '',\n      email: ''\n    };\n\n    _this.dataForm = {\n      employeeName: '',\n      position: '',\n      phone: '',\n      date: '',\n      email: ''\n    };\n\n    _this.setFocus = function(target) {\n      _this.onFocus[target] = 'focused';\n      return _this.onFocus;\n    };\n\n    _this.clearFocus = function(target) {\n      _this.onFocus[target] = '';\n      return _this.onFocus;\n    };\n\n    _this.clearDataForm = function() {\n      _this.dataForm = {\n        employeeName: '',\n        position: '',\n        phone: '',\n        date: '',\n        email: ''\n      };\n      return _this.dataForm;\n    };\n\n    _this.employees = angular.fromJson(localStorage.getItem('employeesList')) || [];\n\n    _this.addPerson = function(data) {\n      if(!data['id']) {\n        data.id = new Date().getTime();\n        _this.employees.unshift(data);\n      } else {\n        _this.employees.map(function(el, ind) {\n          if(el.id === data.id) {\n            _this.employees[ind] = data;\n          }\n        });\n      }\n      _this.setStorage();\n    };\n\n    _this.editPerson = function(id) {\n      _this.employees.map(function(employee) {\n        if(id === employee.id) {\n          _this.dataForm = employee;\n          return _this.dataForm;\n        }\n      });\n    };\n\n    _this.removePerson = function(id) {\n      _this.employees.map(function(employee, index) {\n        if(id === employee.id) {\n          _this.employees.splice(index, 1);\n        }\n      });\n      if(id === _this.dataForm.id) {\n        _this.clearDataForm();\n      }\n      _this.setStorage();\n    };\n\n    //saving employees in localStorage\n    _this.setStorage = function() {\n      var employeesList = angular.toJson(_this.employees);\n      localStorage.setItem('employeesList', employeesList);\n    };\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .component('mainComponent', {\n      templateUrl: 'app/main/main.template.html',\n      bindings: {\n\n      },\n      controller: function() {\n\n      }\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock() {\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html'\n      });\n\n    $stateProvider\n      .state('edit', {\n        url: '/edit',\n        templateUrl: 'app/edit/edit.html'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('colors', ['#f1e2cb', '#ecdade', '#e4f7e3', '#f1ffff']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('Test')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"Test\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/edit/edit.html\",\"<add-component></add-component>\");\n$templateCache.put(\"app/main/main.html\",\"<main-component class=main></main-component>\");\n$templateCache.put(\"app/main/main.template.html\",\"<add-component></add-component><employees-component></employees-component>\");\n$templateCache.put(\"app/components/add/add.template.html\",\"<form action=# class=add-co-worker name=addCoWorker autocomplete=off><div class=inputs-container><div class=inputs-cover><div ng-class=$ctrl.onFocus.employeeName class=input-cover><input type=text ng-focus=$ctrl.focusEffect($event) ng-blur=$ctrl.blurEffect($event) name=employeeName ng-model=$ctrl.mainService.dataForm.employeeName> <span class=label>ИМЯ</span></div><div ng-class=$ctrl.onFocus.position class=input-cover><input type=text ng-focus=$ctrl.focusEffect($event) ng-blur=$ctrl.blurEffect($event) name=position ng-model=$ctrl.mainService.dataForm.position> <span class=label>ДОЛЖНОСТЬ</span></div><div ng-class=$ctrl.onFocus.email class=input-cover><input type=email ng-focus=$ctrl.focusEffect($event) ng-blur=$ctrl.blurEffect($event) name=email pattern=(\\\\S+)@([a-z0-9-]+)(\\\\.)([a-z]{2,4})(\\\\.?)([a-z]{0,4})+ required ng-model=$ctrl.mainService.dataForm.email> <span class=label>ЭЛ.ПОЧТА</span><div class=valid-box><span ng-show=addCoWorker.email.$error.required>Email обязателен</span> <span ng-show=\\\"addCoWorker.email.$invalid && addCoWorker.email.$dirty && $ctrl.mainService.dataForm.email !== \\'\\'\\\">Неверный адрес</span></div></div><div ng-class=$ctrl.onFocus.phone class=input-cover><input type=tel title=\\\"Номер должен содержать 10 цифр в формате (XXX)XXX-XX-XX\\\" ng-focus=$ctrl.focusEffect($event) ng-blur=$ctrl.blurEffect($event) name=phone required pattern=\\\\([0-9]{3}\\\\)[0-9]{3}-[0-9]{2}-[0-9]{2} ng-model=$ctrl.mainService.dataForm.phone> <span class=label>ТЕЛЕФОН</span><div class=valid-box><span ng-show=addCoWorker.phone.$error.required>Телефон обязателен</span> <span ng-show=\\\"addCoWorker.phone.$invalid && addCoWorker.phone.$dirty && $ctrl.mainService.dataForm.phone !== \\'\\'\\\">Формат (XXX)XXX-XX-XX</span></div></div><div ng-class=$ctrl.onFocus.date class=input-cover><input type=text title=\\\"Введите дату в формате дд.мм.гггг\\\" ng-focus=$ctrl.focusEffect($event) ng-blur=$ctrl.blurEffect($event) name=date required pattern=([0-2]\\\\d|3[01])\\\\.(0\\\\d|1[012])\\\\.(\\\\d{4}) ng-model=$ctrl.mainService.dataForm.date> <span class=label>ДАТА</span><div class=valid-box><span ng-show=addCoWorker.date.$error.required>Дата обязательна</span> <span ng-show=\\\"addCoWorker.date.$invalid && addCoWorker.date.$dirty && $ctrl.mainService.dataForm.date !== \\'\\'\\\">Используйте формат дд.мм.гггг</span></div></div><div ng-class=$ctrl.validStatus class=validation-box><span class=validation-message>Проверьте правильность заполнения формы!!!</span></div></div><div class=buttons-cover ui-sref=home ng-click=$ctrl.addEmployee(addCoWorker)></div></div></form>\");\n$templateCache.put(\"app/components/employees/employees.template.html\",\"<div class=container><div class=employee-cover ng-repeat=\\\"employee in $ctrl.employees track by $index\\\" style=\\\"background-color: {{$ctrl.mainService.getColors()[$index]}}\\\"><div class=info-box><div class=info-box_half><div class=info-box_name><strong>ИМЯ</strong> <span>{{employee.employeeName}}</span></div><div class=info-box_position><strong>ДОЛЖНОСТЬ</strong> <span>{{employee.position}}</span></div></div><div class=info-box_half><div class=info-box_email><strong>ЭЛ.ПОЧТА</strong> <span>{{employee.email}}</span></div><div class=info-box_phone><strong>ТЕЛЕФОН</strong> <span>{{employee.phone}}</span></div><div class=info-box_date><strong>ДАТА</strong> <span>{{employee.date}}</span></div></div></div><div class=edit-buttons><div ui-sref=edit class=edit ng-click=$ctrl.editPerson(employee)></div><div class=remove ng-click=$ctrl.removePerson(employee)></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}